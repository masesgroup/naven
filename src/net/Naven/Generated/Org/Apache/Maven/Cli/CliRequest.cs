/*
*  Copyright 2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.12.0)
*  using maven-embedder-3.9.9.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Maven.Cli
{
    #region CliRequest declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.maven/maven-embedder/3.9.9/org/apache/maven/cli/CliRequest.html"/>
    /// </summary>
    public partial class CliRequest : MASES.JCOBridge.C2JBridge.JVMBridgeBase<CliRequest>
    {
        const string _bridgeClassName = "org.apache.maven.cli.CliRequest";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public CliRequest() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public CliRequest(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region CliRequest implementation
    public partial class CliRequest
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.maven/maven-embedder/3.9.9/org/apache/maven/cli/CliRequest.html#getArgs--"/> 
        /// </summary>
        public Java.Lang.String[] Args
        {
            get { return IExecuteWithSignatureArray<Java.Lang.String>("getArgs", "()[Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.maven/maven-embedder/3.9.9/org/apache/maven/cli/CliRequest.html#getClassWorld--"/> 
        /// </summary>
        public Org.Codehaus.Plexus.Classworlds.ClassWorld ClassWorld
        {
            get { return IExecute<Org.Codehaus.Plexus.Classworlds.ClassWorld>("getClassWorld"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.maven/maven-embedder/3.9.9/org/apache/maven/cli/CliRequest.html#getCommandLine--"/> 
        /// </summary>
        public Org.Apache.Commons.Cli.CommandLine CommandLine
        {
            get { return IExecuteWithSignature<Org.Apache.Commons.Cli.CommandLine>("getCommandLine", "()Lorg/apache/commons/cli/CommandLine;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.maven/maven-embedder/3.9.9/org/apache/maven/cli/CliRequest.html#getMultiModuleProjectDirectory--"/> 
        /// </summary>
        public Java.Io.File MultiModuleProjectDirectory
        {
            get { return IExecuteWithSignature<Java.Io.File>("getMultiModuleProjectDirectory", "()Ljava/io/File;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.maven/maven-embedder/3.9.9/org/apache/maven/cli/CliRequest.html#getRequest--"/> 
        /// </summary>
        public Org.Apache.Maven.Execution.MavenExecutionRequest Request
        {
            get { return IExecuteWithSignature<Org.Apache.Maven.Execution.MavenExecutionRequest>("getRequest", "()Lorg/apache/maven/execution/MavenExecutionRequest;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.maven/maven-embedder/3.9.9/org/apache/maven/cli/CliRequest.html#getSystemProperties--"/> 
        /// </summary>
        public Java.Util.Properties SystemProperties
        {
            get { return IExecuteWithSignature<Java.Util.Properties>("getSystemProperties", "()Ljava/util/Properties;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.maven/maven-embedder/3.9.9/org/apache/maven/cli/CliRequest.html#getUserProperties--"/> <see href="https://www.javadoc.io/doc/org.apache.maven/maven-embedder/3.9.9/org/apache/maven/cli/CliRequest.html#setUserProperties-java.util.Properties-"/>
        /// </summary>
        public Java.Util.Properties UserProperties
        {
            get { return IExecuteWithSignature<Java.Util.Properties>("getUserProperties", "()Ljava/util/Properties;"); } set { IExecuteWithSignature("setUserProperties", "(Ljava/util/Properties;)V", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.maven/maven-embedder/3.9.9/org/apache/maven/cli/CliRequest.html#getWorkingDirectory--"/> 
        /// </summary>
        public Java.Lang.String WorkingDirectory
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getWorkingDirectory", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.maven/maven-embedder/3.9.9/org/apache/maven/cli/CliRequest.html#isDebug--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsDebug()
        {
            return IExecuteWithSignature<bool>("isDebug", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.maven/maven-embedder/3.9.9/org/apache/maven/cli/CliRequest.html#isQuiet--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsQuiet()
        {
            return IExecuteWithSignature<bool>("isQuiet", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.maven/maven-embedder/3.9.9/org/apache/maven/cli/CliRequest.html#isShowErrors--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsShowErrors()
        {
            return IExecuteWithSignature<bool>("isShowErrors", "()Z");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}