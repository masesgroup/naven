/*
*  Copyright (c) 2024-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.1.0)
*  using maven-embedder-3.9.11.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Maven.Cli.Configuration
{
    #region SettingsXmlConfigurationProcessor declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.maven/maven-embedder/3.9.11/org/apache/maven/cli/configuration/SettingsXmlConfigurationProcessor.html"/>
    /// </summary>
    public partial class SettingsXmlConfigurationProcessor : Org.Apache.Maven.Cli.Configuration.ConfigurationProcessor
    {
        const string _bridgeClassName = "org.apache.maven.cli.configuration.SettingsXmlConfigurationProcessor";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public SettingsXmlConfigurationProcessor() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public SettingsXmlConfigurationProcessor(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region SettingsXmlConfigurationProcessor implementation
    public partial class SettingsXmlConfigurationProcessor
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.maven/maven-embedder/3.9.11/org/apache/maven/cli/configuration/SettingsXmlConfigurationProcessor.html#DEFAULT_GLOBAL_SETTINGS_FILE"/>
        /// </summary>
        public static Java.Io.File DEFAULT_GLOBAL_SETTINGS_FILE { get { if (!_DEFAULT_GLOBAL_SETTINGS_FILEReady) { _DEFAULT_GLOBAL_SETTINGS_FILEContent = SGetField<Java.Io.File>(LocalBridgeClazz, "DEFAULT_GLOBAL_SETTINGS_FILE"); _DEFAULT_GLOBAL_SETTINGS_FILEReady = true; } return _DEFAULT_GLOBAL_SETTINGS_FILEContent; } }
        private static Java.Io.File _DEFAULT_GLOBAL_SETTINGS_FILEContent = default;
        private static bool _DEFAULT_GLOBAL_SETTINGS_FILEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.maven/maven-embedder/3.9.11/org/apache/maven/cli/configuration/SettingsXmlConfigurationProcessor.html#DEFAULT_USER_SETTINGS_FILE"/>
        /// </summary>
        public static Java.Io.File DEFAULT_USER_SETTINGS_FILE { get { if (!_DEFAULT_USER_SETTINGS_FILEReady) { _DEFAULT_USER_SETTINGS_FILEContent = SGetField<Java.Io.File>(LocalBridgeClazz, "DEFAULT_USER_SETTINGS_FILE"); _DEFAULT_USER_SETTINGS_FILEReady = true; } return _DEFAULT_USER_SETTINGS_FILEContent; } }
        private static Java.Io.File _DEFAULT_USER_SETTINGS_FILEContent = default;
        private static bool _DEFAULT_USER_SETTINGS_FILEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.maven/maven-embedder/3.9.11/org/apache/maven/cli/configuration/SettingsXmlConfigurationProcessor.html#USER_MAVEN_CONFIGURATION_HOME"/>
        /// </summary>
        public static Java.Io.File USER_MAVEN_CONFIGURATION_HOME { get { if (!_USER_MAVEN_CONFIGURATION_HOMEReady) { _USER_MAVEN_CONFIGURATION_HOMEContent = SGetField<Java.Io.File>(LocalBridgeClazz, "USER_MAVEN_CONFIGURATION_HOME"); _USER_MAVEN_CONFIGURATION_HOMEReady = true; } return _USER_MAVEN_CONFIGURATION_HOMEContent; } }
        private static Java.Io.File _USER_MAVEN_CONFIGURATION_HOMEContent = default;
        private static bool _USER_MAVEN_CONFIGURATION_HOMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.maven/maven-embedder/3.9.11/org/apache/maven/cli/configuration/SettingsXmlConfigurationProcessor.html#HINT"/>
        /// </summary>
        public static Java.Lang.String HINT { get { if (!_HINTReady) { _HINTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "HINT"); _HINTReady = true; } return _HINTContent; } }
        private static Java.Lang.String _HINTContent = default;
        private static bool _HINTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.maven/maven-embedder/3.9.11/org/apache/maven/cli/configuration/SettingsXmlConfigurationProcessor.html#USER_HOME"/>
        /// </summary>
        public static Java.Lang.String USER_HOME { get { if (!_USER_HOMEReady) { _USER_HOMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "USER_HOME"); _USER_HOMEReady = true; } return _USER_HOMEContent; } }
        private static Java.Lang.String _USER_HOMEContent = default;
        private static bool _USER_HOMEReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.maven/maven-embedder/3.9.11/org/apache/maven/cli/configuration/SettingsXmlConfigurationProcessor.html#process(org.apache.maven.cli.CliRequest)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Maven.Cli.CliRequest"/></param>
        /// <exception cref="Java.Lang.Exception"/>
        public void Process(Org.Apache.Maven.Cli.CliRequest arg0)
        {
            IExecuteWithSignature("process", "(Lorg/apache/maven/cli/CliRequest;)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}