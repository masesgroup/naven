/*
*  Copyright (c) 2024-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.1.0)
*  using maven-embedder-3.9.11.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Maven.Cli.Logging
{
    #region BaseSlf4jConfiguration declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.maven/maven-embedder/3.9.11/org/apache/maven/cli/logging/BaseSlf4jConfiguration.html"/>
    /// </summary>
    public partial class BaseSlf4jConfiguration : Org.Apache.Maven.Cli.Logging.Slf4jConfiguration
    {
        const string _bridgeClassName = "org.apache.maven.cli.logging.BaseSlf4jConfiguration";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BaseSlf4jConfiguration() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BaseSlf4jConfiguration(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BaseSlf4jConfiguration implementation
    public partial class BaseSlf4jConfiguration
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.maven/maven-embedder/3.9.11/org/apache/maven/cli/logging/BaseSlf4jConfiguration.html#activate()"/>
        /// </summary>
        public void Activate()
        {
            IExecuteWithSignature("activate", "()V");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.maven/maven-embedder/3.9.11/org/apache/maven/cli/logging/BaseSlf4jConfiguration.html#setRootLoggerLevel(org.apache.maven.cli.logging.Slf4jConfiguration.Level)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Maven.Cli.Logging.Slf4jConfiguration.Level"/></param>
        public void SetRootLoggerLevel(Org.Apache.Maven.Cli.Logging.Slf4jConfiguration.Level arg0)
        {
            IExecuteWithSignature("setRootLoggerLevel", "(Lorg/apache/maven/cli/logging/Slf4jConfiguration$Level;)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}